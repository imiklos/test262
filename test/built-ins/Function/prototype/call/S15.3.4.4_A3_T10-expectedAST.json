{
  "type": "Program",
  "loc": {
    "start": {
      "line": 13,
      "column": 1
    },
    "end": {
      "line": 19,
      "column": 1
    }
  },
  "tokens": [
    {
      "type": "Identifier",
      "value": "eval",
      "loc": {
        "start": {
          "line": 13,
          "column": 1
        },
        "end": {
          "line": 13,
          "column": 5
        }
      }
    },
    {
      "type": "Punctuator",
      "value": "(",
      "loc": {
        "start": {
          "line": 13,
          "column": 5
        },
        "end": {
          "line": 13,
          "column": 6
        }
      }
    },
    {
      "type": "String",
      "value": "\" (function(){this.feat=1}).call()\"",
      "loc": {
        "start": {
          "line": 13,
          "column": 6
        },
        "end": {
          "line": 13,
          "column": 41
        }
      }
    },
    {
      "type": "Punctuator",
      "value": ")",
      "loc": {
        "start": {
          "line": 13,
          "column": 41
        },
        "end": {
          "line": 13,
          "column": 42
        }
      }
    },
    {
      "type": "Punctuator",
      "value": ";",
      "loc": {
        "start": {
          "line": 13,
          "column": 42
        },
        "end": {
          "line": 13,
          "column": 43
        }
      }
    },
    {
      "type": "Keyword",
      "value": "if",
      "loc": {
        "start": {
          "line": 16,
          "column": 1
        },
        "end": {
          "line": 16,
          "column": 3
        }
      }
    },
    {
      "type": "Punctuator",
      "value": "(",
      "loc": {
        "start": {
          "line": 16,
          "column": 4
        },
        "end": {
          "line": 16,
          "column": 5
        }
      }
    },
    {
      "type": "Keyword",
      "value": "this",
      "loc": {
        "start": {
          "line": 16,
          "column": 5
        },
        "end": {
          "line": 16,
          "column": 9
        }
      }
    },
    {
      "type": "Punctuator",
      "value": "[",
      "loc": {
        "start": {
          "line": 16,
          "column": 9
        },
        "end": {
          "line": 16,
          "column": 10
        }
      }
    },
    {
      "type": "String",
      "value": "\"feat\"",
      "loc": {
        "start": {
          "line": 16,
          "column": 10
        },
        "end": {
          "line": 16,
          "column": 16
        }
      }
    },
    {
      "type": "Punctuator",
      "value": "]",
      "loc": {
        "start": {
          "line": 16,
          "column": 16
        },
        "end": {
          "line": 16,
          "column": 17
        }
      }
    },
    {
      "type": "Punctuator",
      "value": "!==",
      "loc": {
        "start": {
          "line": 16,
          "column": 18
        },
        "end": {
          "line": 16,
          "column": 21
        }
      }
    },
    {
      "type": "Numeric",
      "value": "1",
      "loc": {
        "start": {
          "line": 16,
          "column": 22
        },
        "end": {
          "line": 16,
          "column": 23
        }
      }
    },
    {
      "type": "Punctuator",
      "value": ")",
      "loc": {
        "start": {
          "line": 16,
          "column": 23
        },
        "end": {
          "line": 16,
          "column": 24
        }
      }
    },
    {
      "type": "Punctuator",
      "value": "{",
      "loc": {
        "start": {
          "line": 16,
          "column": 25
        },
        "end": {
          "line": 16,
          "column": 26
        }
      }
    },
    {
      "type": "Identifier",
      "value": "$ERROR",
      "loc": {
        "start": {
          "line": 17,
          "column": 3
        },
        "end": {
          "line": 17,
          "column": 9
        }
      }
    },
    {
      "type": "Punctuator",
      "value": "(",
      "loc": {
        "start": {
          "line": 17,
          "column": 9
        },
        "end": {
          "line": 17,
          "column": 10
        }
      }
    },
    {
      "type": "String",
      "value": "'#1: If thisArg is null or undefined, the called function is passed the global object as the this value'",
      "loc": {
        "start": {
          "line": 17,
          "column": 10
        },
        "end": {
          "line": 17,
          "column": 114
        }
      }
    },
    {
      "type": "Punctuator",
      "value": ")",
      "loc": {
        "start": {
          "line": 17,
          "column": 114
        },
        "end": {
          "line": 17,
          "column": 115
        }
      }
    },
    {
      "type": "Punctuator",
      "value": ";",
      "loc": {
        "start": {
          "line": 17,
          "column": 115
        },
        "end": {
          "line": 17,
          "column": 116
        }
      }
    },
    {
      "type": "Punctuator",
      "value": "}",
      "loc": {
        "start": {
          "line": 18,
          "column": 1
        },
        "end": {
          "line": 18,
          "column": 2
        }
      }
    }
  ],
  "sourceType": "script",
  "body": [
    {
      "type": "ExpressionStatement",
      "loc": {
        "start": {
          "line": 13,
          "column": 1
        },
        "end": {
          "line": 13,
          "column": 43
        }
      },
      "expression": {
        "type": "CallExpression",
        "loc": {
          "start": {
            "line": 13,
            "column": 1
          },
          "end": {
            "line": 13,
            "column": 42
          }
        },
        "callee": {
          "type": "Identifier",
          "loc": {
            "start": {
              "line": 13,
              "column": 1
            },
            "end": {
              "line": 13,
              "column": 5
            }
          },
          "name": "eval"
        },
        "arguments": [
          {
            "type": "Literal",
            "loc": {
              "start": {
                "line": 13,
                "column": 6
              },
              "end": {
                "line": 13,
                "column": 41
              }
            },
            "value": " (function(){this.feat=1}).call()",
            "raw": "\" (function(){this.feat=1}).call()\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "IfStatement",
      "loc": {
        "start": {
          "line": 16,
          "column": 1
        },
        "end": {
          "line": 18,
          "column": 2
        }
      },
      "test": {
        "type": "BinaryExpression",
        "loc": {
          "start": {
            "line": 16,
            "column": 5
          },
          "end": {
            "line": 16,
            "column": 23
          }
        },
        "left": {
          "type": "MemberExpression",
          "loc": {
            "start": {
              "line": 16,
              "column": 5
            },
            "end": {
              "line": 16,
              "column": 17
            }
          },
          "object": {
            "type": "ThisExpression",
            "loc": {
              "start": {
                "line": 16,
                "column": 5
              },
              "end": {
                "line": 16,
                "column": 9
              }
            }
          },
          "property": {
            "type": "Literal",
            "loc": {
              "start": {
                "line": 16,
                "column": 10
              },
              "end": {
                "line": 16,
                "column": 16
              }
            },
            "value": "feat",
            "raw": "\"feat\""
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "loc": {
            "start": {
              "line": 16,
              "column": 22
            },
            "end": {
              "line": 16,
              "column": 23
            }
          },
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "loc": {
          "start": {
            "line": 16,
            "column": 25
          },
          "end": {
            "line": 18,
            "column": 2
          }
        },
        "body": [
          {
            "type": "ExpressionStatement",
            "loc": {
              "start": {
                "line": 17,
                "column": 3
              },
              "end": {
                "line": 17,
                "column": 116
              }
            },
            "expression": {
              "type": "CallExpression",
              "loc": {
                "start": {
                  "line": 17,
                  "column": 3
                },
                "end": {
                  "line": 17,
                  "column": 115
                }
              },
              "callee": {
                "type": "Identifier",
                "loc": {
                  "start": {
                    "line": 17,
                    "column": 3
                  },
                  "end": {
                    "line": 17,
                    "column": 9
                  }
                },
                "name": "$ERROR"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "loc": {
                    "start": {
                      "line": 17,
                      "column": 10
                    },
                    "end": {
                      "line": 17,
                      "column": 114
                    }
                  },
                  "value": "#1: If thisArg is null or undefined, the called function is passed the global object as the this value",
                  "raw": "'#1: If thisArg is null or undefined, the called function is passed the global object as the this value'"
                }
              ],
              "optional": false
            }
          }
        ]
      },
      "alternate": null
    }
  ]
}